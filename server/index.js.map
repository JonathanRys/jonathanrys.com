{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\schedule.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\logout.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\about.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\index.tsx", "../app/utils.ts", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\login.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\notes.tsx", "../app/models/note.server.ts", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\notes\\$noteId.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\notes\\index.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\notes\\new.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\jobs.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\jobs\\$jobId.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\app\\routes\\join.tsx", "C:\\Users\\Aggro\\node\\projects\\jonathanrys.com\\cypress\\support\\test-routes\\create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\schedule.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\logout.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\about.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\index.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\login.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\notes.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\notes\\\\$noteId.tsx\";\nimport * as route8 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\notes\\\\index.tsx\";\nimport * as route9 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\notes\\\\new.tsx\";\nimport * as route10 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\jobs.tsx\";\nimport * as route11 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\jobs\\\\$jobId.tsx\";\nimport * as route12 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\app\\\\routes\\\\join.tsx\";\nimport * as route13 from \"C:\\\\Users\\\\Aggro\\\\node\\\\projects\\\\jonathanrys.com\\\\cypress\\\\support\\\\test-routes\\\\create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/schedule\": {\n      id: \"routes/schedule\",\n      parentId: \"root\",\n      path: \"schedule\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/jobs\": {\n      id: \"routes/jobs\",\n      parentId: \"root\",\n      path: \"jobs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/jobs/$jobId\": {\n      id: \"routes/jobs/$jobId\",\n      parentId: \"routes/jobs\",\n      path: \":jobId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"C:/Users/Aggro/node/projects/jonathanrys.com/cypress/support/test-routes/create-user\": {\n      id: \"C:/Users/Aggro/node/projects/jonathanrys.com/cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport type {\n  ReactNode,\n  FC,\n} from \"react\";\nimport {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLocation\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport customStylesheetUrl from \"./styles/styles.css\";\nimport { getUser } from \"./session.server\";\n\n// HTML <head> section components\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    { rel: \"stylesheet\", href: customStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\n// Type declarations\ntype Props = {\n  children: ReactNode\n};\n\ntype Error = {\n  message: string\n}\n\ntype State = {\n  hasError: boolean,\n  error?: Error\n}\n\ninterface PropsWithTitle extends Props {\n  title?: string\n};\n\ninterface FooterProps {\n  hide?: boolean\n}\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\n// Loader\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\n// Document component \nconst Document: FC<PropsWithTitle> = ({ children, title = 'Jonathan Rys | Home' }) => {\n  return (\n    <html lang=\"en\" className=\"h-full min-h-screen\">\n      <head>\n        <Meta />\n        <Links />\n        <title>{ title }</title>\n      </head>\n      <body className=\"h-full min-h-screen\">\n        { children }\n        {\n          process.env.NODE_ENV === 'development' ?\n          <LiveReload /> : null\n        }\n      </body>\n    </html>\n  );\n};\n\n// Header component for logo and navigation\nconst menuItems = [\n  {\n    to: '/schedule',\n    icon: '',\n    title: 'Schedule'\n  }, {\n    to: '/jobs',\n    icon: '',\n    title: 'Work Experience'\n  }, {\n    to: '/about',\n    icon: '',\n    title: 'About'\n  },\n];\n\nconst Header = () => {\n  return (\n    <nav className=\"flex align-center z-50 w-full fixed top-0 justify-between bg-zinc-300 text-base font-medium\">\n      <Link to='/' className=\"font-bold p-2\">Home</Link>\n      <ul className=\"flex\">\n        { menuItems.map( (item, index) => (\n          <li key={`menu-item-${index}`} className=\"mx-4 my-3\">\n            <Link to={ item.to }>{ item.title }</Link>\n          </li>\n        )) }\n      </ul>\n    </nav>\n  )\n}\n\nconst footerLinks = [\n  {\n    id: 1,\n    title: 'Contact',\n    href: 'mailto: jonathan.rk.rys@gmail.com'\n  }, {\n    id: 2,\n    title: 'LinkedIn',\n    href: 'https://www.linkedin.com/in/jonathan-rys-a937724b/'\n  }, {\n    id: 3,\n    title: 'GitHub',\n    href: 'https://github.com/JonathanRys'\n  },\n\n];\n\nconst Footer: FC<FooterProps> = ({ hide }) => {\n  return (\n    <>\n      {\n        hide ? null :\n        <footer className=\"w-full py-3 z-50 bg-zinc-300 text-base font-medium fixed bottom-0\">\n          <ul className=\"w-full flex align-center justify-around\">\n            {\n              footerLinks.map(link => (<a key={`footer-link-${link.id}`} href={ link.href }>{ link.title }</a>))\n            }\n          </ul>\n        </footer>\n      }\n    </>\n  );\n}\n\n// Layout wrapper to isolate the order and layout of major sctions\nconst Layout: FC<Props> = ({ children }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Header />\n      <div className=\"container mx-auto h-full z-0 py-16\">\n        { children }\n        <div className=\"h-16\"></div> { /*Spacer for fixed footer*/ }\n      </div>\n      <Footer hide={ location.pathname === '/' } />\n    </>\n  );\n};\n\n// Error Boundry function\nexport const ErrorBoundry: FC<State> = ({ error }) => {\n  return (\n    <Document>\n      <Layout>\n        <div>\n          <h1>Error</h1>\n          <p>{ error && error.message }</p>\n        </div>\n      </Layout>\n    </Document>\n  )\n}\n\n// Create the app structure\nexport default function App() {\n    return (\n      <Document>\n        <Layout>\n          <Outlet />\n        </Layout>\n        <ScrollRestoration />\n        <Scripts />\n      </Document>\n    );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `email#${string}`; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `email#${email}`,\n    email,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import { Outlet, useLoaderData } from '@remix-run/react';\r\n\r\nexport const loader = () => {\r\n  const data = {\r\n    appointments: [\r\n      {\r\n        id: 1,\r\n        title: 'Meeting',\r\n        location: 'Cambridge, MA',\r\n        startDate: '2022-06-15T15:00:00.000Z',\r\n        endDate: '2022-06-15T18:00:00.000Z',\r\n        description: ''\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Meeting',\r\n        location: 'Zoom',\r\n        startDate: '2022-12-15T12:00:00.000Z',\r\n        endDate: '2022-12-15T11:00:00.000Z',\r\n        description: ''\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Meeting',\r\n        location: 'Boston, MA',\r\n        startDate: '2022-07-14T07:00:00.000Z',\r\n        endDate: '2022-07-14T08:30:00.000Z',\r\n        description: ''\r\n      },\r\n    ]\r\n  };\r\n\r\n  return data;\r\n};\r\n\r\ninterface Appointment {\r\n  id: number,\r\n  title: string,\r\n  location: string,\r\n  startDate: string,\r\n  endDate: string,\r\n  description: string\r\n}\r\n\r\nconst Appointments = () => {    \r\n    const { appointments } = useLoaderData();\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"text-xl\">Schedule</h1>\r\n        <p>Here is my schedule.  If you&apos;d like to set up some time to talk, please <a className=\"hyperlink\" href=\"mailto: jonathan.rk.rys@gmail.com\">reach out</a>.</p>\r\n        <ul>\r\n          {\r\n            appointments.map( (appointment: Appointment) => {\r\n              const startTime = new Date(appointment.startDate).toLocaleString();\r\n              const endTime = new Date(appointment.endDate).toLocaleString();\r\n\r\n              return (\r\n                <li className=\"my-8 p-5 rounded-md bg-zinc-200\" key={`job-${appointment.id}` }>\r\n                    <h4 className=\"py-1\">\r\n                      { appointment.location }\r\n                    </h4>\r\n                    <div>\r\n                      <span className=\"font-bold\">\r\n                        { appointment.title }\r\n                      </span> ({ startTime } - { endTime }): { appointment.description }\r\n                    </div>\r\n                </li>\r\n              );\r\n            })\r\n          }            \r\n        </ul>\r\n        <Outlet />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Appointments;", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "const data = [\r\n  {\r\n    id: 1,\r\n    title: 'Interests',\r\n    text: 'I enjoy science of all kinds.  I\\'m vegan.'\r\n  }, {\r\n    id: 2,\r\n    title: 'Hobbies',\r\n    text: 'Skateboarding, Hiking, Cooking, Foraging, Mycology'\r\n  }\r\n];\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"text-xl mb-2\">About Me</h1>\r\n      <ul>\r\n        {\r\n          data.map((item) => (\r\n            <li key={ `about-${item.id}` }>\r\n              <div className=\"my-2\">\r\n                <h4 className=\"font-bold\">{ item.title }</h4>\r\n                <p>{ item.text }</p>\r\n              </div>\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"relative bg-white sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"absolute inset-0\">\n              <img\n                className=\"h-full w-full object-cover\"\n                src=\"/_static/cover_image.jpg\"\n                alt={ \"Boot spur from \\\"the HoJo\\\" near Tuckerman's ravine\" }\n              />\n              <div className=\"absolute inset-0 bg-[color:rgba(156,156,156,0.5)] mix-blend-multiply\" />\n            </div>\n            <div className=\"lg:pb-18 relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pt-32\">\n\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {user ? (\n                  <Link\n                    to=\"/notes\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-zinc-900 shadow-sm hover:bg-zinc-200 sm:px-8\"\n                  >\n                    View Notes for {user.email}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-zinc-900 shadow-sm hover:bg-zinc-200 sm:px-8\"\n                    >\n                      Sign up\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-zinc-600 px-4 py-3 font-medium text-white hover:bg-zinc-700  \"\n                    >\n                      Log In\n                    </Link>\n                  </div>\n                )}\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mx-auto max-w-7xl py-2 px-4 sm:px-6 lg:px-8\">\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\n            {[\n              {\n                src: \"/_static/logos/remix_logo.svg\",\n                alt: \"Remix\",\n                href: \"https://remix.run\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157991167-651c8fc5-2f72-4afa-94d8-2520ecbc5ebc.svg\",\n                alt: \"AWS\",\n                href: \"https://aws.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157991935-26c0d587-b866-49f5-af34-8f04be1c9df2.svg\",\n                alt: \"DynamoDB\",\n                href: \"https://aws.amazon.com/dynamodb/\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157990874-31f015c3-2af7-4669-9d61-519e5ecfdea6.svg\",\n                alt: \"Architect\",\n                href: \"https://arc.codes\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\n                alt: \"Tailwind\",\n                href: \"https://tailwindcss.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\n                alt: \"Cypress\",\n                href: \"https://www.cypress.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\n                alt: \"MSW\",\n                href: \"https://mswjs.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\n                alt: \"Vitest\",\n                href: \"https://vitest.dev\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\n                alt: \"Testing Library\",\n                href: \"https://testing-library.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\n                alt: \"Prettier\",\n                href: \"https://prettier.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\n                alt: \"ESLint\",\n                href: \"https://eslint.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\n                alt: \"TypeScript\",\n                href: \"https://typescriptlang.org\",\n              },\n            ].map((img) => (\n              <a\n                key={img.href}\n                href={img.href}\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\n              >\n                <img alt={img.alt} src={img.src} />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Note } from \"~/models/note.server\";\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: Note;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as LoaderData;\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import { Link, Outlet, useLoaderData } from '@remix-run/react';\r\n\r\nexport const loader = () => {\r\n  const data = {\r\n    jobs: [\r\n      {\r\n        id: 1,\r\n        title: 'Sr. Software Engineer',\r\n        companyName: 'BetterLesson',\r\n        location: 'Cambridge, MA',\r\n        startDate: '2018',\r\n        endDate: '2021',\r\n        description: 'Used Git and Jira, daily for project management. Used Python and Flask in tandem with SQLAlchemy to bring data to the front-end.  Used ElasticSearch, Alembic/MySQL, PostgreSQL, Quickbase, and Salesforce to store and retrieve data. Used JavaScript and React to build Front-end UIs.  Lead the adoption of automated testing using Jest, Enzyme and RTL. Implemented code-quality standards using ES-lint and Pylint in our CI/CD pipeline. Configured webpack. Used serverless to test AWS lambdas locally.  Set up systems involving webhooks, AWS lambdas, S3 and supervisor processes to poll SQS to collect messages added by the lambda. Used packer to build a new Docker container for our local environments to facilitate a Python3 upgrade.  Built and deployed new Linux servers using packer and Terraform. Used the AWS Console to manage our systems.  Configured NginX for local routing and proxying.  Set up and polled standard, FIFO, and dead-letter queues in SQS.'\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Software Engineer',\r\n        companyName: 'American Tower',\r\n        location: 'Woburn, MA',\r\n        startDate: '2015',\r\n        endDate: '2018',\r\n        description: 'Built enterprise applications using HTML5, CSS3, JavaScript and ES6. While there I used node.js and Express.js to expose REST services which supply data from Oracle or MSSQL to the front-end as JSON.  Used React, npm, webpack, etc. to build single-page apps with authentication and authorization that consume data from REST services. Also used many packages from npm including socket.io, reactstrap, babel, axios and Sass.  Configured build automation using CircleCI, Travis CI and Jenkins. Built several responsive, dynamic widgets for the public web site including some using the Google Maps API.  Taught design patterns, lead code reviews and gave presentations on React, npm, webpack, Git, and Redux.  Used HOCs, currying and composition to refactor code to make it more modular and maintainable.'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Web Developer',\r\n        companyName: 'Pearson Inc.',\r\n        location: 'Boston, MA',\r\n        startDate: '2012',\r\n        endDate: '2015',\r\n        description: 'Employed HTML5, XML, CSS3, JavaScript, jQuery, and Bootstrap to build and modify responsive web-pages in Backbone for both distributed content and internal use. Used object-oriented JavaScript in Google AppScripts with JSON objects and various APIs to automate Google sheets. Wrote UNIX shell-scripts to sort and manage files, and Perl scripts to parse documents and extract text.  Responsible for dynamically creating data used to link PDF, image, and video files to create various digital products containing 35,000+ files.'\r\n      },\r\n    ]\r\n  };\r\n\r\n  return data;\r\n};\r\n\r\ninterface Job {\r\n  id: number,\r\n  title: string,\r\n  companyName: string,\r\n  location: string,\r\n  startDate: string,\r\n  endDate: string,\r\n  description: string\r\n}\r\n\r\nconst Jobs = () => {    \r\n    const { jobs } = useLoaderData();\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"text-xl\">Work Experience</h1>\r\n        <ul>\r\n          {\r\n            jobs.map( (job: Job) => {\r\n              return (\r\n                <li className=\"my-10 p-5 rounded-md bg-zinc-200\" key={`job-${job.id}` }>\r\n                    <h4 className=\"py-1\">\r\n                      <Link className=\"font-medium text-lg\" to={{\r\n                        pathname: `/jobs/${job.id}`,\r\n                        search: 'company'\r\n                      }}>{ job.companyName }</Link> - { job.location }\r\n                    </h4>\r\n                    <div>\r\n                      <span className=\"font-bold\">{ job.title }</span> ({ job.startDate } - { job.endDate }): { job.description }\r\n                    </div>\r\n                </li>\r\n              );\r\n            })\r\n          }            \r\n        </ul>\r\n        <Outlet />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Jobs;\r\n", "import { useParams, useLoaderData } from '@remix-run/react';\r\n\r\nexport const loader = () => {\r\n  const data = {\r\n    jobs: [\r\n      {\r\n        id: 1,\r\n        title: 'Sr. Software Engineer',\r\n        companyName: 'BetterLesson',\r\n        location: 'Cambridge, MA',\r\n        startDate: '2018',\r\n        endDate: '2021',\r\n        description: 'Used Git and Jira, daily for project management. Used Python and Flask in tandem with SQLAlchemy to bring data to the front-end.  Used ElasticSearch, Alembic/MySQL, PostgreSQL, Quickbase, and Salesforce to store and retrieve data. Used JavaScript and React to build Front-end UIs.  Lead the adoption of automated testing using Jest, Enzyme and RTL. Implemented code-quality standards using ES-lint and Pylint in our CI/CD pipeline. Configured webpack. Used serverless to test AWS lambdas locally.  Set up systems involving webhooks, AWS lambdas, S3 and supervisor processes to poll SQS to collect messages added by the lambda. Used packer to build a new Docker container for our local environments to facilitate a Python3 upgrade.  Built and deployed new Linux servers using packer and Terraform. Used the AWS Console to manage our systems.  Configured NginX for local routing and proxying.  Set up and polled standard, FIFO, and dead-letter queues in SQS.'\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Software Engineer',\r\n        companyName: 'American Tower',\r\n        location: 'Woburn, MA',\r\n        startDate: '2015',\r\n        endDate: '2018',\r\n        description: 'Built enterprise applications using HTML5, CSS3, JavaScript and ES6. While there I used node.js and Express.js to expose REST services which supply data from Oracle or MSSQL to the front-end as JSON.  Used React, npm, webpack, etc. to build single-page apps with authentication and authorization that consume data from REST services. Also used many packages from npm including socket.io, reactstrap, babel, axios and Sass.  Configured build automation using CircleCI, Travis CI and Jenkins. Built several responsive, dynamic widgets for the public web site including some using the Google Maps API.  Taught design patterns, lead code reviews and gave presentations on React, npm, webpack, Git, and Redux.  Used HOCs, currying and composition to refactor code to make it more modular and maintainable.'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Web Developer',\r\n        companyName: 'Pearson Inc.',\r\n        location: 'Boston, MA',\r\n        startDate: '2012',\r\n        endDate: '2015',\r\n        description: 'Employed HTML5, XML, CSS3, JavaScript, jQuery, and Bootstrap to build and modify responsive web-pages in Backbone for both distributed content and internal use. Used object-oriented JavaScript in Google AppScripts with JSON objects and various APIs to automate Google sheets. Wrote UNIX shell-scripts to sort and manage files, and Perl scripts to parse documents and extract text.  Responsible for dynamically creating data used to link PDF, image, and video files to create various digital products containing 35,000+ files.'},\r\n    ]\r\n  };\r\n\r\n  return data;\r\n};\r\n\r\ntype Job = {\r\n  id: number,\r\n  title: string,\r\n  companyName: string,\r\n  location: string,\r\n  startDate: string,\r\n  endDate: string,\r\n  description: string\r\n}\r\n\r\nconst Jobs = () => {\r\n    const { jobId } = useParams()\r\n    const { jobs } = useLoaderData();\r\n\r\n    const job: Job = jobs.find( (job: Job) => job.id === parseInt(jobId || '0'))\r\n\r\n    return (\r\n      <>\r\n        { job.description }\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Jobs;\r\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'132f5a9f','entry':{'module':'/_static/build/entry.client-H4BYTVRZ.js','imports':['/_static/build/_shared/chunk-ED3VY7KL.js','/_static/build/_shared/chunk-6BO74FWO.js']},'routes':{'C:/Users/Aggro/node/projects/jonathanrys.com/cypress/support/test-routes/create-user':{'id':'C:/Users/Aggro/node/projects/jonathanrys.com/cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/_.._/cypress/support/test-routes/create-user-G54LKPSD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-RIGAOPEN.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/about-SLKTA2PC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-JI2X4FH3.js','imports':['/_static/build/_shared/chunk-APWFV6Y5.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jobs':{'id':'routes/jobs','parentId':'root','path':'jobs','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/jobs-GT5UGI4G.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jobs/$jobId':{'id':'routes/jobs/$jobId','parentId':'routes/jobs','path':':jobId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/jobs/$jobId-3EGNHGMW.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-GDNWGC3U.js','imports':['/_static/build/_shared/chunk-DFG4XZEI.js','/_static/build/_shared/chunk-ME5PAYV3.js','/_static/build/_shared/chunk-APWFV6Y5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-NLH6XF2K.js','imports':['/_static/build/_shared/chunk-DFG4XZEI.js','/_static/build/_shared/chunk-ME5PAYV3.js','/_static/build/_shared/chunk-APWFV6Y5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-BOUQO4HU.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-7EKSWO5V.js','imports':['/_static/build/_shared/chunk-2YJZUK4K.js','/_static/build/_shared/chunk-ME5PAYV3.js','/_static/build/_shared/chunk-APWFV6Y5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/$noteId-ODYEAO7W.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes/index-6KAAEDN2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/new-NXIXND4L.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/schedule':{'id':'routes/schedule','parentId':'root','path':'schedule','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/schedule-RBAFL3JB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-132F5A9F.js'};"],
  "mappings": "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",
  "names": []
}
