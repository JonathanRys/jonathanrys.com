{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/nav/footer.tsx", "../app/util/notification.tsx", "../app/nav/header.tsx", "../app/routes/appointment.tsx", "../app/models/appointment.server.ts", "../app/utils.ts", "../app/routes/portfolio.tsx", "../app/routes/logout.tsx", "../app/routes/about.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/blog/index.tsx", "../app/routes/jobs.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\r\nimport * as build from \"@remix-run/dev/server-build\";\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  // Set dev server timezone to the local timezone.\r\n  process.env.TZ = 'America/New_York';\r\n\r\n  require(\"./mocks\");\r\n}\r\n\r\nexport const handler = createRequestHandler({\r\n  build,\r\n  mode: process.env.NODE_ENV,\r\n});\r\n", "\nimport * as entryServer from \"F:\\\\projects\\\\jonathanrys.com\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/appointment.tsx\";\nimport * as route2 from \"./routes/portfolio.tsx\";\nimport * as route3 from \"./routes/logout.tsx\";\nimport * as route4 from \"./routes/about.tsx\";\nimport * as route5 from \"./routes/index.tsx\";\nimport * as route6 from \"./routes/login.tsx\";\nimport * as route7 from \"./routes/notes.tsx\";\nimport * as route8 from \"./routes/blog/index.tsx\";\nimport * as route9 from \"./routes/jobs.tsx\";\nimport * as route10 from \"./routes/join.tsx\";\nimport * as route11 from \"./../cypress/support/test-routes/create-user.ts\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false,\"unstable_routeConfig\":false};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/appointment\": {\n      id: \"routes/appointment\",\n      parentId: \"root\",\n      path: \"appointment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/portfolio\": {\n      id: \"routes/portfolio\",\n      parentId: \"root\",\n      path: \"portfolio\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: \"index\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/blog\": {\n      id: \"routes/blog\",\n      parentId: \"root\",\n      path: \"blog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/jobs\": {\n      id: \"routes/jobs\",\n      parentId: \"root\",\n      path: \"jobs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction } from\n\"@remix-run/node\";\nimport type { FC } from \"react\";\nimport { useEffect } from \"react\";\nimport type { WrapperProps } from '~/types/base';\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLocation,\n  useLoaderData } from\n\"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport customStylesheetUrl from \"./styles/styles.css\";\nimport datepickerStylesheetUrl from \"react-datepicker/dist/react-datepicker.css\";\n\nimport { getUser } from \"./session.server\";\n\nimport Footer from \"./nav/footer\";\nimport Header from \"./nav/header\";\n\n// HTML <head> section components\nexport const links: LinksFunction = () => {\n  return [\n  { rel: \"stylesheet\", type: \"text/css\", href: tailwindStylesheetUrl },\n  { rel: \"stylesheet\", type: \"text/css\", href: customStylesheetUrl },\n  { rel: \"stylesheet\", type: \"text/css\", href: datepickerStylesheetUrl },\n  // NOTE: Architect deploys the public directory to /_static/\n  { rel: \"icon\", id: \"light-scheme-icon\", type: \"image/png\", href: \"/_static/favicon.ico\" },\n  { rel: \"icon\", id: \"dark-scheme-icon\", type: \"image/png\", href: \"/_static/favicon_dark.ico\" }];\n\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  viewport: \"width=device-width,initial-scale=1\"\n});\n\n// Type declarations\ntype Error = {\n  message: string;\n};\n\ntype State = {\n  hasError: boolean;\n  error?: Error;\n};\n\ninterface PropsWithTitle extends WrapperProps {\n  title?: string;\n};\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\n// Loader\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request)\n  });\n};\n\n// Document component \nconst Document: FC<PropsWithTitle> = ({ children, title = 'Jonathan Rys | Home' }) => {\n  useEffect(() => {\n    const matcher = window.matchMedia('(prefers-color-scheme: dark)');\n    const lightIcon = document.querySelector('link#light-scheme-icon');\n    const darkIcon = document.querySelector('link#dark-scheme-icon');\n\n    if (!lightIcon || !darkIcon) return;\n\n    const onUpdate = () => {\n      if (matcher.matches) {\n        lightIcon.remove();\n        document.head.append(darkIcon);\n      } else {\n        darkIcon.remove();\n        document.head.append(lightIcon);\n      }\n    };\n    matcher.addEventListener(\"change\", onUpdate);\n    onUpdate();\n  });\n\n  return (\n    <html lang=\"en\" className=\"h-full min-h-screen font-sans text-zinc-600\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n        <title>{title}</title>\r\n      </head>\r\n      <body className=\"h-full min-h-screen\">\r\n        {children}\r\n        {\n        process.env.NODE_ENV === 'development' ?\n        <LiveReload port={8002} /> : null\n        }\r\n      </body>\r\n    </html>);\n\n};\n\n// Layout wrapper to isolate the order and layout of major sctions\nconst Layout: FC<WrapperProps> = ({ children }) => {\n  const location = useLocation();\n  const { user } = useLoaderData();\n  const onHomePage = location.pathname === '/';\n\n  return (\n    <>\r\n      <Header user={user} pathname={location.pathname} />\r\n      <div className={`container mx-auto h-full z-0 ${onHomePage ? 'px-0 py-10 sm:py-20' : 'px-2 sm:px-0 py-16 sm:py-20'}`}>\r\n        {children}\r\n        <div className=\"h-16\"></div> {/*Spacer for fixed footer*/}\r\n      </div>\r\n      <Footer hide={onHomePage} />\r\n    </>);\n\n};\n\n// Error Boundry function\nexport const ErrorBoundry: FC<State> = ({ error }) => {\n  return (\n    <Document>\r\n      <Layout>\r\n        <div>\r\n          <h1>Error</h1>\r\n          <p>{error && error.message}</p>\r\n        </div>\r\n      </Layout>\r\n    </Document>);\n\n};\n\n// Create the app structure\nexport default function App() {\n  return (\n    <Document>\r\n      <Layout>\r\n        <Outlet />\r\n      </Layout>\r\n      <ScrollRestoration />\r\n      <Scripts />\r\n    </Document>);\n\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nimport type { User } from \"~/models/user.server\";\r\nimport { getUserById } from \"~/models/user.server\";\r\n\r\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\r\n\r\nexport const sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"__session\",\r\n    httpOnly: true,\r\n    maxAge: 0,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [process.env.SESSION_SECRET],\r\n    secure: process.env.NODE_ENV === \"production\",\r\n  },\r\n});\r\n\r\nconst USER_SESSION_KEY = \"userId\";\r\n\r\nexport async function getSession(request: Request) {\r\n  const cookie = request.headers.get(\"Cookie\");\r\n  return sessionStorage.getSession(cookie);\r\n}\r\n\r\nexport async function getUserId(\r\n  request: Request\r\n): Promise<User[\"id\"] | undefined> {\r\n  const session = await getSession(request);\r\n  const userId = session.get(USER_SESSION_KEY);\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (userId === undefined) return null;\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const userId = await getUserId(request);\r\n  if (!userId) {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n  return userId;\r\n}\r\n\r\nexport async function requireUser(request: Request) {\r\n  const userId = await requireUserId(request);\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function createUserSession({\r\n  request,\r\n  userId,\r\n  remember,\r\n  redirectTo,\r\n}: {\r\n  request: Request;\r\n  userId: string;\r\n  remember: boolean;\r\n  redirectTo: string;\r\n}) {\r\n  const session = await getSession(request);\r\n  session.set(USER_SESSION_KEY, userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\r\n        maxAge: remember\r\n          ? 60 * 60 * 24 * 7 // 7 days\r\n          : undefined,\r\n      }),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getSession(request);\r\n  \r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n", "import arc from \"@architect/functions\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nexport type User = { id: `email#${string}`; email: string };\r\nexport type Password = { password: string };\r\n\r\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\r\n  const db = await arc.tables();\r\n  const result = await db.user.query({\r\n    KeyConditionExpression: \"pk = :pk\",\r\n    ExpressionAttributeValues: { \":pk\": id },\r\n  });\r\n\r\n  const [record] = result.Items;\r\n  if (record) return { id: record.pk, email: record.email };\r\n  return null;\r\n}\r\n\r\nexport async function getUserByEmail(email: User[\"email\"]) {\r\n  return getUserById(`email#${email}`);\r\n}\r\n\r\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\r\n  const db = await arc.tables();\r\n  const result = await db.password.query({\r\n    KeyConditionExpression: \"pk = :pk\",\r\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\r\n  });\r\n\r\n  const [record] = result.Items;\r\n\r\n  if (record) return { hash: record.password };\r\n  return null;\r\n}\r\n\r\nexport async function createUser(\r\n  email: User[\"email\"],\r\n  password: Password[\"password\"]\r\n) {\r\n  const hashedPassword = await bcrypt.hash(password, 10);\r\n  const db = await arc.tables();\r\n  await db.password.put({\r\n    pk: `email#${email}`,\r\n    password: hashedPassword,\r\n  });\r\n\r\n  await db.user.put({\r\n    pk: `email#${email}`,\r\n    email,\r\n  });\r\n\r\n  const user = await getUserByEmail(email);\r\n  invariant(user, `User not found after being created. This should not happen`);\r\n\r\n  return user;\r\n}\r\n\r\nexport async function deleteUser(email: User[\"email\"]) {\r\n  const db = await arc.tables();\r\n  await db.password.delete({ pk: `email#${email}` });\r\n  await db.user.delete({ pk: `email#${email}` });\r\n}\r\n\r\nexport async function verifyLogin(\r\n  email: User[\"email\"],\r\n  password: Password[\"password\"]\r\n) {\r\n  const userPassword = await getUserPasswordByEmail(email);\r\n\r\n  if (!userPassword) {\r\n    return undefined;\r\n  }\r\n\r\n  const isValid = await bcrypt.compare(password, userPassword.hash);\r\n  if (!isValid) {\r\n    return undefined;\r\n  }\r\n\r\n  return getUserByEmail(email);\r\n}\r\n", "import type { FC } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Notification from '~/util/notification'\r\n\r\ninterface FooterProps {\r\n  hide?: boolean\r\n}\r\n  \r\nconst Footer: FC<FooterProps> = ({ hide }) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const copyHandler = () => {\r\n  navigator.clipboard.writeText('jonathan.rk.rys@gmail.com')\r\n  setMessage('Email copied to clipboard');\r\n  }\r\n\r\n  const footerLinks = [\r\n  {\r\n      id: 1,\r\n      title: 'Contact',\r\n      icon: 'icon-mail4',\r\n      href: 'mailto: jonathan.rk.rys@gmail.com',\r\n      onClick: copyHandler\r\n  }, {\r\n      id: 2,\r\n      title: 'LinkedIn',\r\n      icon: 'icon-linkedin',\r\n      href: 'https://www.linkedin.com/in/jonathan-rys-a937724b/'\r\n  }, {\r\n      id: 3,\r\n      title: 'GitHub',\r\n      icon: 'icon-github',\r\n      href: 'https://github.com/JonathanRys'\r\n  },\r\n  ];\r\n\r\n  return (\r\n  <>\r\n      {\r\n      hide ? null :\r\n      <footer className=\"w-full py-3 nav-bg z-40 text-base font-medium fixed bottom-0\">\r\n          <Notification message={ message } setMessage={ setMessage }/>\r\n          <ul className=\"w-full flex align-center justify-around\">\r\n          {\r\n              footerLinks.map(link => (\r\n              <a \r\n                  onClick={ link.onClick || undefined }\r\n                  key={`footer-link-${link.id}`}\r\n                  className=\"hover:text-black hover:font-bold text-shadow\"\r\n                  href={ link.href }>\r\n                  <i className={ link.icon }></i> { link.title }\r\n              </a>\r\n              ))\r\n          }\r\n          </ul>\r\n      </footer>\r\n      }\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n", "import type { FC } from \"react\";\r\nimport { useEffect } from 'react';\r\n\r\nexport type Props = {\r\n  setMessage: (message: string) => void,\r\n  message: string\r\n}\r\n\r\nconst Notification:FC<Props> = ({ message, setMessage }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setMessage('')\r\n    }, 2500)\r\n  }, [message, setMessage])\r\n\r\n  return (\r\n    <div className={`notification${ message ? '' : ' hidden'}`}>\r\n      { message }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Notification;\r\n", "import type { FC, MouseEvent } from \"react\";\r\nimport type { User } from \"~/types/base\";\r\nimport { useState } from \"react\";\r\nimport { Form, Link } from \"@remix-run/react\";\r\n\r\ninterface HeaderProps {\r\n  user?: User;\r\n  pathname: string;\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({ user, pathname }) => {\r\n  // Pull this to root so one can close the menu when clicking the body\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const onHomePage = pathname === \"/\";\r\n\r\n  const menuItems = [\r\n    {\r\n      to: \"/portfolio\",\r\n      icon: \"icon-folder\",\r\n      title: \"Portfolio\",\r\n    },\r\n    // {\r\n    //   to: \"/appointment\",\r\n    //   icon: \"icon-calendar\",\r\n    //   title: \"Appointments\",\r\n    // },\r\n    // {\r\n    //   to: \"/blog\",\r\n    //   icon: \"icon-pencil\",\r\n    //   title: \"Blog\",\r\n    // },\r\n    {\r\n      to: \"/jobs\",\r\n      icon: \"icon-briefcase\",\r\n      title: \"Work Experience\",\r\n    },\r\n    {\r\n      to: \"/about\",\r\n      icon: \"icon-info\",\r\n      title: \"About\",\r\n    },\r\n  ];\r\n\r\n  // Take care of eveything here rather than deferring to higher processes to avoid complication\r\n  const clickHandler = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setMenuOpen(false);\r\n    // @ts-ignore-start\r\n    // I would create a custom type except I feel that form? belongs on MouseEvent.target and should be updated there\r\n    e.target.form?.submit();\r\n    // @ts-ignore end\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav nav-bg w-full text-base sm:font-medium\">\r\n      <Link\r\n        to=\"/\"\r\n        className={`font-semibold${onHomePage ? \" disabled\" : \" text-shadow\"}`}\r\n      >\r\n        <i className=\"icon-home pl-2 pr-2 sm:pl-4\"></i>Home\r\n      </Link>\r\n      <div\r\n        className=\"icon-menu relative right-2 -m-1 flex overflow-visible py-2 text-xl sm:hidden\"\r\n        onClick={() => setMenuOpen(!menuOpen)}\r\n      >\r\n        {menuOpen && (\r\n          <ul\r\n            onClick={clickHandler}\r\n            className=\"mobile-nav mobile-nav-bg font-sans\"\r\n          >\r\n            {menuItems.map((item, index) => (\r\n              <li\r\n                key={`menu-item-${index}`}\r\n                className={`px-4 py-5 hover:bg-zinc-300${\r\n                  pathname === item.to ? \" disabled\" : \" text-shadow\"\r\n                }`}\r\n              >\r\n                <Link to={item.to}>\r\n                  <i className={item.icon}></i> {item.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n            {user ? (\r\n              <Form action=\"/logout\" method=\"post\">\r\n                <button\r\n                  type=\"submit\"\r\n                  title=\"Logout\"\r\n                  className=\"text-shadow px-4 py-3 hover:bg-zinc-300\"\r\n                >\r\n                  <i className=\"icon-exit\"></i> Logout\r\n                </button>\r\n              </Form>\r\n            ) : null}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <ul className=\"desktop-nav hidden sm:flex\">\r\n        {menuItems.map((item, index) => (\r\n          <Link\r\n            key={`menu-item-${index}`}\r\n            to={item.to}\r\n            title={item.title}\r\n            className={`px-4 py-5 menu-item${\r\n              pathname === item.to ? \" disabled\" : \" text-shadow\"\r\n            }`}\r\n          >\r\n            {item.title}\r\n          </Link>\r\n        ))}\r\n        {user ? (\r\n          <Form action=\"/logout\" method=\"post\">\r\n            <button\r\n              type=\"submit\"\r\n              title=\"Logout\"\r\n              className=\"menu-item text-shadow px-4 py-5\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </Form>\r\n        ) : null}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n", "import { Outlet, Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\r\n\r\nimport type { FC } from \"react\";\r\nimport { useState } from 'react';\r\n\r\nimport { getUser } from \"~/session.server\";\r\nimport type { Appointment } from \"~/models/appointment.server\";\r\nimport { getAppointmentListItems } from \"~/models/appointment.server\";\r\nimport { useOptionalUser } from \"~/utils\";\r\nimport Notification from '~/util/notification'\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const user = await getUser(request);\r\n  if (!user) {\r\n    return [];\r\n  }\r\n\r\n  const appointments = await getAppointmentListItems({ userId: user.id });\r\n\r\n  return appointments;\r\n};\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Upcoming Appointments\",\r\n  };\r\n};\r\n\r\ntype IconProps = {\r\n  location: string\r\n}\r\n\r\nconst Icon: FC<IconProps> = ({ location }) => {\r\n  switch(location) {\r\n  case 'phone':\r\n    return (<i className=\"icon-phone\"></i>)\r\n  case 'zoom':\r\n    return (<i className=\"icon-video-camera\"></i>)\r\n  }\r\n  return null;\r\n}\r\n\r\nconst Appointments = () => {\r\n  const user = useOptionalUser();\r\n  const appointments = useLoaderData();\r\n  const [message, setMessage] = useState('');\r\n\r\n  const copyHandler = () => {\r\n    navigator.clipboard.writeText('jonathan.rk.rys@gmail.com')\r\n    setMessage('Email copied to clipboard');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notification message={message} setMessage={setMessage}/>\r\n      <h1 className=\"text-xl\">Upcoming appointments</h1>\r\n      <p className=\"mt-5\">If you&apos;d like to set up some time to talk,\r\n        {\r\n        user ?\r\n        <Link className=\"hyperlink\" to=\"/appointment/create?redirectTo=/appointment\"> schedule an appointment </Link> :\r\n        <Link className=\"hyperlink\" to=\"/login\"> Log in </Link>\r\n        }\r\n        or feel free to <a className=\"hyperlink\" href=\"mailto: jonathan.rk.rys@gmail.com\" onClick={ copyHandler }>\r\n          reach out via email\r\n        </a>.\r\n      </p>\r\n      <ul>\r\n        {\r\n          user && appointments ? \r\n          appointments.map( (appointment: Appointment, index: number) => {\r\n            return (\r\n              <li className=\"my-8 p-5 list-item-bubble\" key={`job-${appointment.id}` }>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <h4 className=\"py-1\">\r\n                    <Icon location={ appointment.location } />\r\n                    <span className=\"font-bold\">\r\n                      {` ${appointment.title}`}\r\n                    </span>\r\n                  </h4>\r\n                  <div>\r\n                    <span className=\"hidden sm:inline\">(</span>{ appointment.startDate } - { appointment.endDate }<span className=\"hidden sm:inline\">)</span>\r\n                  </div>\r\n                </div>\r\n                <div className='flex justify-between'>\r\n                  <div className='w-full'>\r\n                    { appointment.description }\r\n                  </div>\r\n                  <div className='tools'>\r\n                    <Link to={`/appointment/${appointment.id}/edit?redirectTo=/appointment`}><i title=\"edit\" className='icon-pencil px-2'></i></Link>\r\n                    <Link to={`/appointment/${appointment.id}/delete?redirectTo=/appointment`}><i title=\"delete\" className='icon-bin2 px-2'></i></Link>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          }) :\r\n          <>\r\n            <li className='my-4 mx-1'>You have no upcoming appointments.</li>\r\n            <li className='my-4 mx-1 text-sm'>Scheduling an appointment will send a confirmation email and an email alert one day before the event to both parties.</li>\r\n          </>\r\n        }            \r\n      </ul>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n", "import arc from \"@architect/functions\";\r\nimport { createId } from \"@paralleldrive/cuid2\";\r\n\r\nimport type { User } from \"./user.server\";\r\nimport type { QueryOutput } from \"@aws-sdk/client-dynamodb\";\r\nimport { sendAppointmentEmail } from \"~/util/google_tools\";\r\n\r\nexport type Appointment = {\r\n  id?: ReturnType<typeof createId>;\r\n  userId: User[\"id\"];\r\n  title: string;\r\n  description: string;\r\n  location: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  timeZone?: string;\r\n  gcal_event_id?: string;\r\n};\r\n\r\nexport type AppointmentItem = {\r\n  pk: User[\"id\"];\r\n  sk: `appointment#${Appointment[\"id\"]}`;\r\n};\r\n\r\nconst skToId = (sk: AppointmentItem[\"sk\"]): Appointment[\"id\"] =>\r\n  sk.replace(/^appointment#/, \"\");\r\nconst idToSk = (id: Appointment[\"id\"]): AppointmentItem[\"sk\"] =>\r\n  `appointment#${id}`;\r\n\r\nexport async function getAppointment({\r\n  id,\r\n  userId,\r\n}: Pick<Appointment, \"id\" | \"userId\">): Promise<Appointment | null> {\r\n  const db = await arc.tables();\r\n\r\n  const result = await await db.appointment.get({ pk: userId, sk: idToSk(id) });\r\n\r\n  if (result) {\r\n    return {\r\n      userId: result.pk,\r\n      id: result.sk,\r\n      title: result.title,\r\n      description: result.description,\r\n      location: result.location,\r\n      startDate: result.startDate,\r\n      endDate: result.endDate,\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport async function getAppointmentListItems({\r\n  userId,\r\n}: Pick<Appointment, \"userId\">): Promise<\r\n  Array<\r\n    Pick<Appointment, \"id\" | \"title\" | \"location\" | \"startDate\" | \"endDate\">\r\n  >\r\n> {\r\n  const db = await arc.tables();\r\n\r\n  const admins = [\r\n    \"email#admin@jonathanrys.com\",\r\n    `email#${process.env.ADMIN_EMAIL}`,\r\n  ];\r\n\r\n  let response;\r\n  let result;\r\n\r\n  if (userId && admins.includes(userId)) {\r\n    const params = { TableName: \"appointment\" };\r\n    response = await db.appointment.scan(params);\r\n    result = response.Items.map(\r\n      (item: Appointment & AppointmentItem): Appointment => ({\r\n        userId: item.userId,\r\n        title: item.title,\r\n        location: item.location,\r\n        startDate: item.startDate,\r\n        endDate: item.endDate,\r\n        description: item.description,\r\n        id: skToId(item.sk),\r\n      })\r\n    );\r\n  } else {\r\n    response = await db.appointment.query({\r\n      KeyConditionExpression: \"pk = :pk\",\r\n      ExpressionAttributeValues: { \":pk\": userId },\r\n    });\r\n    result = response.Items.map(\r\n      (item: Appointment & AppointmentItem): Appointment => ({\r\n        userId: item.userId,\r\n        title: item.title,\r\n        location: item.location,\r\n        startDate: item.startDate,\r\n        endDate: item.endDate,\r\n        description: item.description,\r\n        id: skToId(item.sk),\r\n      })\r\n    );\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport async function createAppointment({\r\n  userId,\r\n  title,\r\n  description,\r\n  location,\r\n  startDate,\r\n  endDate,\r\n}: Pick<\r\n  Appointment,\r\n  \"description\" | \"title\" | \"userId\" | \"location\" | \"startDate\" | \"endDate\"\r\n>): Promise<Appointment> {\r\n  const db = await arc.tables();\r\n\r\n  const result = await db.appointment.put({\r\n    pk: userId,\r\n    sk: idToSk(createId()),\r\n    title: title,\r\n    description: description,\r\n    location: location,\r\n    startDate: startDate,\r\n    endDate: endDate,\r\n  });\r\n\r\n  // Add calendar event\r\n\r\n  // Send email confirmation\r\n  try {\r\n    sendAppointmentEmail(result);\r\n  } catch (err) {\r\n    console.log(\"Error sending event creation email:\", err);\r\n  }\r\n\r\n  return {\r\n    id: skToId(result.sk),\r\n    userId: result.pk,\r\n    title: result.title,\r\n    description: result.description,\r\n    location: result.location,\r\n    startDate: result.startDate,\r\n    endDate: result.endDate,\r\n  };\r\n}\r\n\r\nexport async function updateAppointment({\r\n  userId,\r\n  id,\r\n  title,\r\n  description,\r\n  location,\r\n  startDate,\r\n  endDate,\r\n}: Pick<\r\n  Appointment,\r\n  | \"description\"\r\n  | \"title\"\r\n  | \"userId\"\r\n  | \"id\"\r\n  | \"location\"\r\n  | \"startDate\"\r\n  | \"endDate\"\r\n>): Promise<Appointment> {\r\n  const db = await arc.tables();\r\n\r\n  const result = await db.appointment.put({\r\n    pk: userId,\r\n    sk: id,\r\n    title: title,\r\n    description: description,\r\n    location: location,\r\n    startDate: startDate,\r\n    endDate: endDate,\r\n  });\r\n\r\n  if (result) {\r\n    db.appointment.delete({ pk: userId, sk: idToSk(id) });\r\n  }\r\n\r\n  // Update calendar\r\n\r\n  // Send update email\r\n  try {\r\n    sendAppointmentEmail(result);\r\n  } catch (err) {\r\n    console.log(\"Error sending event update email:\", err);\r\n  }\r\n\r\n  return {\r\n    id: id,\r\n    userId: result.pk,\r\n    title: result.title,\r\n    description: result.description,\r\n    location: result.location,\r\n    startDate: result.startDate,\r\n    endDate: result.endDate,\r\n  };\r\n}\r\n\r\nexport async function deleteAppointment({\r\n  id,\r\n  userId,\r\n}: Pick<Appointment, \"id\" | \"userId\">) {\r\n  const db = await arc.tables();\r\n\r\n  const appointment = (await db.appointment.delete({\r\n    pk: userId,\r\n    sk: idToSk(id),\r\n  })) as Appointment & AppointmentItem;\r\n\r\n  // Delete calendar event\r\n\r\n  // Send deleted email\r\n  try {\r\n    sendAppointmentEmail(appointment);\r\n  } catch (err) {\r\n    console.log(\"Error sending event deleted email:\", err);\r\n  }\r\n\r\n  return appointment;\r\n}\r\n", "import { useMatches, useLocation } from \"@remix-run/react\";\r\nimport { useMemo } from \"react\";\r\n\r\nimport type { User } from \"~/models/user.server\";\r\n\r\nconst DEFAULT_REDIRECT = \"/\";\r\n\r\n/**\r\n * This should be used any time the redirect path is user-provided\r\n * (Like the query string on our login/signup pages). This avoids\r\n * open-redirect vulnerabilities.\r\n * @param {string} to The redirect destination\r\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\r\n */\r\nexport function safeRedirect(\r\n  to: FormDataEntryValue | string | null | undefined,\r\n  defaultRedirect: string = DEFAULT_REDIRECT\r\n) {\r\n  if (!to || typeof to !== \"string\") {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  return to;\r\n}\r\n\r\n/**\r\n * This base hook is used in other hooks to quickly search for specific data\r\n * across all loader data using useMatches.\r\n * @param {string} id The route id\r\n * @returns {JSON|undefined} The router data or undefined if not found\r\n */\r\nexport function useMatchesData(\r\n  id: string\r\n): Record<string, unknown> | undefined {\r\n  const matchingRoutes = useMatches();\r\n  const route = useMemo(\r\n    () => matchingRoutes.find((route) => route.id === id),\r\n    [matchingRoutes, id]\r\n  );\r\n  return route?.data;\r\n}\r\n\r\nfunction isUser(user: any): user is User {\r\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\r\n}\r\n\r\nexport function useOptionalUser(): User | undefined {\r\n  const data = useMatchesData(\"root\");\r\n  if (!data || !isUser(data.user)) {\r\n    return undefined;\r\n  }\r\n  return data.user;\r\n}\r\n\r\nexport function useUser(): User {\r\n  const maybeUser = useOptionalUser();\r\n  if (!maybeUser) {\r\n    throw new Error(\r\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\r\n    );\r\n  }\r\n  return maybeUser;\r\n}\r\n\r\nexport function validateEmail(email: unknown): email is string {\r\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\r\n}\r\n\r\nexport function useQueryString() {\r\n  const { search } = useLocation();\r\n\r\n  return useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    {\r\n      title: \"Portfolio\",\r\n    },\r\n  ];\r\n};\r\n\r\nconst portfolioData = [\r\n  {\r\n    id: 1,\r\n    title: \"HealthVision\",\r\n    company: \"HDAI\",\r\n    text: \"Worked on all aspects of this application which is available in hospitals throughout the country inside Epic. This application allows physicians and nurses to gain valuable insights into their patients' medical history using data science and AI tools.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"PhysGPT\",\r\n    company: \"Private Investor\",\r\n    text: \"This project ingested millions of vectors of data from over 5000 PDFs (some 100,000 pages long) that were OCRed, split into chunks, embedded, and uploaded to Pinecone. When the user enters a query via the UI, the query is converted to a vector and sent to Pinecone.  Pinecone then takes that vector, finds the top 10 closest (most semantically similar) vectors, and returns them.  I then query MongoDB to get the actual text and book metadata and I query the LLM with the text and a prompt as context to get an AI-generated summary of the topic. This was built with FastAPI and React then Dockerized and pushed to ECR. The infrastructure was provisioned on AWS using Terraform.  User management and account info is stored in DynamoDB, vectors are stored in Pinecone (I also tested this with Milvus but Pinecone was better).\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"jonathanrys.com\",\r\n    company: \"Personal Project\",\r\n    text: \"I built this site using ReMix.  I chose ReMix for a few reasons: I was interested in proxy state management using MobX in React, I had read Kent C. Dodd's article on ReMix and wanted to try it out, and I wanted to learn DynamoDB.  ReMix comes with a basic home page design out of the box.  I liked it better than any previous idea I had and didn't want to re-invent the wheel, so I modified it and added some pages of my own.  Design guidelines say to choose 3 colors for your brand and stick with those; I chose black, white and gray ;).  I'm not really much of a designer, but I can quickly build complex, pixel-perfect UIs.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Queuing system\",\r\n    company: \"BetterLesson\",\r\n    text: \"Took over ownership of the queuing system and the associated webhooks. I managed setting up and configuring a FIFO queue as well as dead-letter queues. This was built in AWS Lambda(Python) and SQS.  The queuing system handled webhook calls from Zoom and Salesforce and updated our app and data warehouse whenever a data source changed.  This project was fun because all of the functions had to be idempotent for this to work.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Coaching Platform\",\r\n    company: \"BetterLesson\",\r\n    text: \"Worked on various features of our interactive coaching platform, from video integration with Zoom to user management consoles. This application was built with Flask and React and pulled data from Zoom, Salesforce, CoachBase, and MySQL together to allow teachers and their coaches to lay out a learning plan, share milestones and feedback, and schedule and share clips from video meetings all within our platform.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Python 3 Upgrade\",\r\n    company: \"BetterLesson\",\r\n    text: \"Led the upgrade of our servers in all environments from Python 2.7 to Python 3.6 and updated the encoding and collation of character-based columns in MySQL to utf8 from latin1.\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Arduino project for my parents\",\r\n    company: \"Mom & Dad\",\r\n    text: \"Wrote C++ code to control the lights on the stairs at my parent's house using motion sensors.  This required using a priority queue so that someone triggering one set of lights doesn't affect another set of previously triggered lights.\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Mobile app to check product ingredients\",\r\n    company: \"Personal Project\",\r\n    text: \"Designed and built a mobile app for Android using React Native.  This app allows the user to set dietary preferences within the app and then scan food products at the store.  The app takes the barcode and calls the OpenFoodFacts.org API to get a list of ingredients and other dietary information.  Then it makes a call to my Python API to classify the ingredients.  Then, based on the user's preferences, the UI would let them know if the product met their approval.\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"OnSite\",\r\n    company: \"American Tower\",\r\n    text: \"This was an app to help technicians take inventory of the equipment on cell phone towers. The app needed to be available offline so they could upload the data when they returned to their homes so I made heavy use of localStorage and service workers. This app was built with jQuery, CSS, and HTML.  I was not initially the architect on this project, but I came to own the product.\",\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"Digits\",\r\n    company: \"Pearson\",\r\n    text: \"This was a digital learning platform that I helped work on. It was built with HTML, CSS, MathML, and Javascript.\",\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Texaco Project\",\r\n    company: \"Texaco\",\r\n    text: \"Rewrote legacy FORTRAN code to work with the inputs and outputs of the flowcharting software Aspen.  Used the results to program EEPROM chips for use in refinery control systems.  This required rewriting all the loops to use a newer syntax and all I had was a dot-matrix printed FORTRAN manual to help me.  After getting the code working in the flowcharting software, we were able to run simulations and adjust the inputs to find the optimal solution.  We then took that solution and used it to program EEPROM chips for use in the refinery's control systems.\",\r\n  },\r\n];\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-2 text-2xl\">Portfolio</h1>\r\n      <div>\r\n        <h3 className=\"text-lg\">Here are some of the projects I'm proud of:</h3>\r\n        {portfolioData.map((folio) => (\r\n          <div key={`folio-${folio.id}`} className=\"list-item-bubble my-10 p-5\">\r\n            <h5 className=\"mb-2 text-base font-semibold\">\r\n              {folio.title} (<span className=\"text-sm\">{folio.company}</span>)\r\n            </h5>\r\n            <p>{folio.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import type { MetaFunction } from \"@remix-run/node\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    {\r\n      title: \"About Jonathan\",\r\n    },\r\n  ];\r\n};\r\n\r\nconst About = () => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      title: \"Interests\",\r\n      text: `I enjoy studying science and mathematics of all kinds.  I've been vegan for ${9} years and vegetarian for ${20}.  I love hiking and camping any time of year and have hiked all 48 of the 4000-footers in NH in all 4 seasons.`, // @todo: make this dynamic 10/15/15\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Hobbies\",\r\n      text: \"Hiking, Rock/Ice Climbing, Kayaking, Cooking, Foraging, Mycology, Microscopy, Speed cubing\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"About Me\",\r\n      text: \"I've lived in the Boston area my whole life. I learned to use a computer so I could play video games at a very young age.  I remember using DOS 3.0 on a 16 GHz machine and booting from a floppy disk.  I learned BASIC in High school and I taught myself C and wrote an H.P. Lovecraft-inspired text-based video game with some animated graphics.  Then one summer I helped my father to rewrite some FORTRAN code and used the results to program EEPROM chips.  This got me excited about a career in computer science.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"mb-2 text-2xl\">About Me</h1>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <li key={`about-${item.id}`} className=\"list-item-bubble my-10 p-5\">\r\n            <h5 className=\"mb-2 text-base font-semibold\">{item.title}</h5>\r\n            <p>{item.text}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n", "// import type { ActionFunction } from \"@remix-run/node\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\n// import { getSession } from \"~/session.server\";\r\n\r\nimport { useOptionalUser } from \"~/utils\";\r\n\r\n// export const action: ActionFunction = async ({ request }) => {\r\n// const session = await getSession(request);\r\n\r\nexport default function Index() {\r\n  const user = useOptionalUser();\r\n\r\n  return (\r\n    <main className=\"relative sm:flex sm:items-center sm:justify-center\">\r\n      <div className=\"relative sm:pb-16 sm:pt-8\">\r\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\r\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\r\n            <div className=\"absolute inset-0\">\r\n              <img\r\n                className=\"h-full w-full object-cover\"\r\n                src=\"/_static/cover_image.jpg\"\r\n                alt={'Boot spur from \"the HoJo\" near Tuckerman ravine'}\r\n              />\r\n              <div className=\"absolute inset-0 bg-[color:rgba(156,156,156,0.5)] mix-blend-multiply\"></div>\r\n            </div>\r\n            <div className=\"lg:pb-18 relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pt-32\">\r\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\r\n                {user ? (\r\n                  <Link\r\n                    to=\"/appointment/create\"\r\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-zinc-900 shadow-sm hover:bg-zinc-200 sm:px-8\"\r\n                  >\r\n                    Schedule an Apppointment\r\n                  </Link>\r\n                ) : (\r\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\r\n                    <Link\r\n                      to=\"/join\"\r\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-zinc-900 shadow-sm hover:bg-zinc-200 sm:px-8\"\r\n                    >\r\n                      Sign up\r\n                    </Link>\r\n                    <Link\r\n                      to=\"/login\"\r\n                      className=\"flex items-center justify-center rounded-md bg-zinc-600 px-4 py-3 font-medium text-white hover:bg-zinc-700  \"\r\n                    >\r\n                      Log In\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mx-auto max-w-7xl py-2 px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\r\n            {[\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157991167-651c8fc5-2f72-4afa-94d8-2520ecbc5ebc.svg\",\r\n                alt: \"AWS\",\r\n                href: \"https://aws.com\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157991935-26c0d587-b866-49f5-af34-8f04be1c9df2.svg\",\r\n                alt: \"DynamoDB\",\r\n                href: \"https://aws.amazon.com/dynamodb/\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157990874-31f015c3-2af7-4669-9d61-519e5ecfdea6.svg\",\r\n                alt: \"Architect\",\r\n                href: \"https://arc.codes\",\r\n              },\r\n              {\r\n                src: \"/_static/logos/remix_logo.svg\",\r\n                alt: \"Remix\",\r\n                href: \"https://remix.run\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\r\n                alt: \"Tailwind\",\r\n                href: \"https://tailwindcss.com\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\r\n                alt: \"Cypress\",\r\n                href: \"https://www.cypress.io\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\r\n                alt: \"MSW\",\r\n                href: \"https://mswjs.io\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\r\n                alt: \"Vitest\",\r\n                href: \"https://vitest.dev\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\r\n                alt: \"Testing Library\",\r\n                href: \"https://testing-library.com\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\r\n                alt: \"Prettier\",\r\n                href: \"https://prettier.io\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\r\n                alt: \"ESLint\",\r\n                href: \"https://eslint.org\",\r\n              },\r\n              {\r\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\r\n                alt: \"TypeScript\",\r\n                href: \"https://typescriptlang.org\",\r\n              },\r\n            ].map((img) => (\r\n              <a\r\n                key={img.href}\r\n                href={img.href}\r\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\r\n              >\r\n                <img alt={img.alt} src={img.src} />\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n", "import type {\r\n  ActionFunction,\r\n  LoaderFunction,\r\n  MetaFunction,\r\n} from \"@remix-run/node\";\r\nimport type { FC } from \"react\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\r\nimport * as React from \"react\";\r\n\r\nimport { createUserSession, getUserId } from \"~/session.server\";\r\nimport { verifyLogin } from \"~/models/user.server\";\r\nimport { safeRedirect, validateEmail } from \"~/utils\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n  return json({});\r\n};\r\n\r\ninterface ActionData {\r\n  errors?: {\r\n    email?: string;\r\n    password?: string;\r\n  };\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\r\n  const remember = formData.get(\"remember\");\r\n\r\n  if (!validateEmail(email)) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"Email is invalid\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is too short\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await verifyLogin(email, password);\r\n\r\n  if (!user) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"Invalid email or password\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  return createUserSession({\r\n    request,\r\n    userId: user.id,\r\n    remember: remember === \"on\" ? true : false,\r\n    redirectTo,\r\n  });\r\n};\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Login\",\r\n  };\r\n};\r\n\r\ntype State = {\r\n  hasError: boolean,\r\n  error?: Error\r\n}\r\n\r\n// Error Boundry function\r\nexport const ErrorBoundry: FC<State> = ({ error }) => {\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <h1 className=\"text-xl font-medium leading-normal text-zinc-800\">Error:</h1>\r\n        <pre>{ error?.message }</pre>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function LoginPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/appointment\";\r\n  const actionData = useActionData() as ActionData;\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const passwordRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.email) {\r\n      emailRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <Form method=\"post\" className=\"space-y-6 form\" noValidate>\r\n          <div>\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium text-zinc-700\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                ref={emailRef}\r\n                id=\"email\"\r\n                required\r\n                autoFocus={true}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                aria-invalid={actionData?.errors?.email ? true : undefined}\r\n                aria-describedby=\"email-error\"\r\n                className=\"w-full rounded border border-zinc-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.email && (\r\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\r\n                  {actionData.errors.email}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-medium text-zinc-700\"\r\n            >\r\n              Password\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                id=\"password\"\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                aria-describedby=\"password-error\"\r\n                className=\"w-full rounded border border-zinc-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.password && (\r\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                  {actionData.errors.password}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full rounded bg-sky-500  py-2 px-4 text-white hover:bg-sky-600 focus:bg-sky-400\"\r\n          >\r\n            Log in\r\n          </button>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember\"\r\n                name=\"remember\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 rounded border-zinc-300 text-sky-600 focus:ring-sky-500\"\r\n              />\r\n              <label\r\n                htmlFor=\"remember\"\r\n                className=\"ml-2 block text-sm text-zinc-900\"\r\n              >\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            <div className=\"text-center text-sm text-zinc-500\">\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                className=\"text-sky-500 underline\"\r\n                to={{\r\n                  pathname: \"/join\",\r\n                  search: searchParams.toString(),\r\n                }}\r\n              >\r\n                Sign up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport { createId } from \"@paralleldrive/cuid2\";\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof createId>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(createId()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "// import { Outlet } from \"@remix-run/react\";\r\n\r\nconst articles = [\r\n  {\r\n    id: 1,\r\n    title: \"Agile\",\r\n    subTitle: \"Myths and misunderstandings\",\r\n    summary:\r\n      \"Agile is one of the most widely used and widely misunderstood frameworks out there. Let's try to clear things up.\",\r\n    link: \"/blog/agile\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"CSS and JS\",\r\n    subTitle: \"Star-crossed lovers\",\r\n    summary:\r\n      \"CSS was not designed with JS in mind.  JS was not designed with CSS in mind.  Should we try to mix the two?\",\r\n    link: \"/blog/css-and-js\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Testing\",\r\n    subTitle: \"When to test, what to test, and how to test\",\r\n    summary:\r\n      \"Should we write unit tests or e2e tests?  How much coverage is too much coverage?\",\r\n    link: \"/blog/testing\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Bugs\",\r\n    subTitle: \"Where they come from and how to keep them out\",\r\n    summary:\r\n      \"Bugs don't just appear out of nowhere.  We create them by giving them good places to form, by not testing properly, and by not having the processes in place to prevent them from recurring.\",\r\n    link: \"/blog/bugs\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Functional Programming Paradigms\",\r\n    subTitle: \"From group theory to type systems\",\r\n    summary:\r\n      \"A brief overview of the functional programming landscape and why it makes sense.  Explore concepts like the Y-combinator, Monads, Options, and Eithers\",\r\n    link: \"/blog/functional-programming\",\r\n  },\r\n];\r\n\r\nconst Blog = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl\">Blog Posts</h1>\r\n      {articles.map((article) => (\r\n        <div\r\n          key={`blog-article-${article.id}`}\r\n          className=\"list-item-bubble my-10 p-5\"\r\n        >\r\n          <div className=\"mb-2 flex items-baseline\">\r\n            <h1 className=\"mr-2 text-lg font-bold\">{article.title}:</h1>{\" \"}\r\n            <h2 className=\"text-base\">{article.subTitle}</h2>\r\n          </div>\r\n          {article.summary}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\nimport { Link, Outlet } from \"@remix-run/react\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    {\r\n      title: \"Work Experience\",\r\n    },\r\n  ];\r\n};\r\n\r\nconst Jobs = () => {\r\n  const jobs = [\r\n    {\r\n      id: 1,\r\n      title: \"Sr. Software Engineer\",\r\n      companyName: \"Health Data Analytics Institute\",\r\n      companyLogo: \"/_static/logos/hdai_logo1.png\",\r\n      location: \"Dedham, MA\",\r\n      startDate: \"2023\",\r\n      endDate: \"present\",\r\n      description:\r\n        \"Worked with NestJS, React, React Query, and TypeScript to build APIs and application features.  Helped with the configuration and rollout of a new testing initiative using Playwright.  Migrated the frontend unit testing framework from Jest to Vitest.  Created database diagrams for the frontend teams.  Wrote documentation, participated in story design, helped design new DB tables.  Performed code reviews, mentored junior developers, helped define coding standards, etc.  Led the upgrade of Node, React, Typescript, ESlint, and numerous other libraries.  Configured Vite/Rollup, ESLint, Typescript, and node.  Aligned the configuration systems between the front and back end.  Significantly reduced time spent starting the app locally and switching environments.  Moved the backend app to a containerized deployment with Docker to be deployed to ECS.  Set up GitHub actions to build and deploy both the backend(ECR) and the frontend(S3) of the app.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Lead Software Engineer\",\r\n      companyName: \"Self-employed\",\r\n      companyLogo: \"\",\r\n      location: \"Remote\",\r\n      startDate: \"2023\",\r\n      endDate: \"2023\",\r\n      description:\r\n        \"Ingested data from a collection of several thousand PDFs producing millions of vectors.  Split the data into chunks based on token count because the token limit restriction prevented effective texttiling.  I\u2019m looking into building a hybrid solution.  Applied NLP techniques using nltk.  Created vector embeddings from the text chunks and saved them in Pinecone/Milvus.  Built a RAG-based GPT chatbot using the data in the vector DB for semantic search, then provided that result as context to the generative language model to create a summary about the topic.  Developed and deployed the architecture around these systems to AWS using terraform.  Created mockups in Balsamiq and used Trello for project management.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Sr. Software Engineer\",\r\n      companyName: \"BetterLesson\",\r\n      companyLogo: \"/_static/logos/BL-Logo-Inline.svg\",\r\n      location: \"Cambridge, MA\",\r\n      startDate: \"2018\",\r\n      endDate: \"2021\",\r\n      description:\r\n        \"Used Git and Jira, daily for project management. Used Python and Flask in tandem with SQLAlchemy to bring data to the front-end.  Used ElasticSearch, Alembic/MySQL, PostgreSQL, Quickbase, and Salesforce to store and retrieve data. Used JavaScript and React to build Front-end UIs.  Lead the adoption of automated testing using Jest, Enzyme and RTL. Implemented code-quality standards using ES-lint and Pylint in our CI/CD pipeline. Configured webpack. Used serverless to test AWS lambdas locally.  Set up systems involving webhooks, AWS lambdas, S3 and supervisor processes to poll SQS to collect messages added by the lambda. Used packer to build a new Docker container for our local environments to facilitate a Python3 upgrade.  Built and deployed new Linux servers using packer and Terraform. Used the AWS Console to manage our systems.  Configured NginX for local routing and proxying.  Set up and polled standard, FIFO, and dead-letter queues in SQS.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Software Engineer\",\r\n      companyName: \"American Tower\",\r\n      companyLogo: \"/_static/logos/atc_logo.png\",\r\n      location: \"Woburn, MA\",\r\n      startDate: \"2015\",\r\n      endDate: \"2018\",\r\n      description:\r\n        \"Built enterprise applications using HTML5, CSS3, JavaScript and ES6. While there I used node.js and Express.js to expose REST services which supply data from Oracle or MSSQL to the front-end as JSON.  Used React, npm, webpack, etc. to build single-page apps with authentication and authorization that consume data from REST services. Also used many packages from npm including socket.io, reactstrap, babel, axios and Sass.  Configured build automation using CircleCI, Travis CI and Jenkins. Built several responsive, dynamic widgets for the _static web site including some using the Google Maps API.  Taught design patterns, lead code reviews and gave presentations on React, npm, webpack, Git, and Redux.  Used HOCs, currying and composition to refactor code to make it more modular and maintainable.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Web Developer\",\r\n      companyName: \"Pearson Inc.\",\r\n      companyLogo: \"/_static/logos/pearson_logo_white_bg.png\",\r\n      location: \"Boston, MA\",\r\n      startDate: \"2012\",\r\n      endDate: \"2015\",\r\n      description:\r\n        \"Employed HTML5, XML, CSS3, JavaScript, jQuery, and Bootstrap to build and modify responsive web-pages in Backbone for both distributed content and internal use. Used object-oriented JavaScript in Google AppScripts with JSON objects and various APIs to automate Google sheets. Wrote UNIX shell-scripts to sort and manage files, and Perl scripts to parse documents and extract text.  Responsible for dynamically creating data used to link PDF, image, and video files to create various digital products containing 35,000+ files.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-2xl\">Work Experience</h1>\r\n      <ul>\r\n        {jobs.map((job) => {\r\n          return (\r\n            <li className=\"list-item-bubble my-10 p-5\" key={`job-${job.id}`}>\r\n              <h4 className=\"py-1\">\r\n                <Link\r\n                  className=\"text-lg font-medium\"\r\n                  to={{\r\n                    pathname: `/jobs/${job.id}`,\r\n                    search: \"company\",\r\n                  }}\r\n                >\r\n                  {job.companyName} - {job.location}\r\n                  {job.companyLogo && (\r\n                    <div className=\"float-right\">\r\n                      <img\r\n                        height={40}\r\n                        width={120}\r\n                        src={job.companyLogo}\r\n                        alt=\"Company logo\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Link>{\" \"}\r\n              </h4>\r\n              <div>\r\n                <span className=\"font-bold\">{job.title}</span> ({job.startDate}{\" \"}\r\n                - {job.endDate}): {job.description}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n", "import type {\r\n  ActionFunction,\r\n  LoaderFunction,\r\n  MetaFunction,\r\n} from \"@remix-run/node\";\r\nimport type { FC } from \"react\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\r\nimport * as React from \"react\";\r\n\r\nimport { getUserId, createUserSession } from \"~/session.server\";\r\n\r\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\r\nimport { safeRedirect, validateEmail } from \"~/utils\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n  return json({});\r\n};\r\n\r\ninterface ActionData {\r\n  errors: {\r\n    email?: string;\r\n    password?: string;\r\n  };\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\r\n\r\n  if (!validateEmail(email)) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"Email is invalid\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is too short\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const existingUser = await getUserByEmail(email);\r\n  if (existingUser) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"A user already exists with this email\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await createUser(email, password);\r\n\r\n  return createUserSession({\r\n    request,\r\n    userId: user.id,\r\n    remember: false,\r\n    redirectTo,\r\n  });\r\n};\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Sign Up\",\r\n  };\r\n};\r\n\r\ntype State = {\r\n  hasError: boolean,\r\n  error?: Error\r\n}\r\n\r\n// Error Boundry function\r\nexport const ErrorBoundry: FC<State> = ({ error }) => {\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <h1 className=\"text-xl font-medium leading-normal text-zinc-800\">Error:</h1>\r\n        <pre>{ error?.message }</pre>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Join() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = safeRedirect(searchParams.get(\"redirectTo\"), \"/\");\r\n  const actionData = useActionData() as ActionData;\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const passwordRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.email) {\r\n      emailRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <Form method=\"post\" className=\"space-y-6 form\" noValidate>\r\n          <div>\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium text-zinc-700\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                ref={emailRef}\r\n                id=\"email\"\r\n                required\r\n                autoFocus={true}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                aria-invalid={actionData?.errors?.email ? true : undefined}\r\n                aria-describedby=\"email-error\"\r\n                className=\"w-full rounded border border-zinc-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.email && (\r\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\r\n                  {actionData.errors.email}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-medium text-zinc-700\"\r\n            >\r\n              Password\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                id=\"password\"\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                aria-describedby=\"password-error\"\r\n                className=\"w-full rounded border border-zinc-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.password && (\r\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                  {actionData.errors.password}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full rounded bg-sky-500  py-2 px-4 text-white hover:bg-sky-600 focus:bg-sky-400\"\r\n          >\r\n            Create Account\r\n          </button>\r\n          <div className=\"flex items-center justify-center\">\r\n            <div className=\"text-center text-sm text-zinc-500\">\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                className=\"text-sky-500 underline\"\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  search: searchParams.toString(),\r\n                }}\r\n              >\r\n                Log in\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\n\r\nimport { createUser } from \"~/models/user.server\";\r\nimport { createUserSession } from \"~/session.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    console.error(\r\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\r\n    );\r\n    // test routes should not be enabled in production or without\r\n    // enable test routes... Just in case this somehow slips through\r\n    // we'll redirect :)\r\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\r\n  }\r\n\r\n  const { email } = await request.json();\r\n  if (!email) {\r\n    throw new Error(\"email required for login\");\r\n  }\r\n  if (!email.endsWith(\"@example.com\")) {\r\n    throw new Error(\"All test emails must end in @example.com\");\r\n  }\r\n\r\n  const user = await createUser(email, \"myreallystrongpassword\");\r\n  if (user) {\r\n    return createUserSession({\r\n      request,\r\n      userId: user.id,\r\n      remember: true,\r\n      redirectTo: \"/\",\r\n    });\r\n  }\r\n};\r\n\r\nexport default null;\r\n", "export default {'entry':{'module':'/_static/build/entry.client-6SREP5BV.js','imports':['/_static/build/_shared/chunk-J7BWL7T7.js','/_static/build/_shared/chunk-LPPYD6HP.js','/_static/build/_shared/chunk-6FZTSJIS.js','/_static/build/_shared/chunk-IZ2HZTBT.js','/_static/build/_shared/chunk-UUCMHJJ2.js','/_static/build/_shared/chunk-VDD37JSE.js','/_static/build/_shared/chunk-WN4IQK2U.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-CKRJDCVY.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-MBIVBHLJ.js','imports':['/_static/build/_shared/chunk-SN7WORGT.js','/_static/build/_shared/chunk-NGMGOBMD.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/about-HXJMYHMW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/appointment':{'id':'routes/appointment','parentId':'root','path':'appointment','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/appointment-GQO3RS5S.js','imports':['/_static/build/_shared/chunk-NNIK6ZRY.js','/_static/build/_shared/chunk-CQ63G7NL.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/blog':{'id':'routes/blog','parentId':'root','path':'blog','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/blog-LSVFCFBZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':'index','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/index-APRPSJNE.js','imports':['/_static/build/_shared/chunk-CQ63G7NL.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/jobs':{'id':'routes/jobs','parentId':'root','path':'jobs','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/jobs-623ENDNW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-442L4O2O.js','imports':['/_static/build/_shared/chunk-YAI26XTG.js','/_static/build/_shared/chunk-NNIK6ZRY.js','/_static/build/_shared/chunk-CQ63G7NL.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-4UR27SV7.js','imports':['/_static/build/_shared/chunk-YAI26XTG.js','/_static/build/_shared/chunk-NNIK6ZRY.js','/_static/build/_shared/chunk-CQ63G7NL.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-TFHAYXS5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-PEFS6HZX.js','imports':['/_static/build/_shared/chunk-NNIK6ZRY.js','/_static/build/_shared/chunk-CQ63G7NL.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/portfolio':{'id':'routes/portfolio','parentId':'root','path':'portfolio','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/portfolio-OEKCWQZF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'8498c8dc','hmr':{'runtime':'/_static/build/_shared\\\\chunk-UUCMHJJ2.js','timestamp':1731765879736},'url':'/_static/build/manifest-8498C8DC.js'};"],
  "mappings": "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",
  "names": ["useEffect", "invariant", "invariant", "jsxDEV", "jsxDEV", "useState", "jsxDEV", "Fragment", "jsxDEV", "useEffect", "loader", "meta", "Outlet", "Link", "useLoaderData", "useState", "arc", "useLocation", "route", "arc", "Fragment", "jsxDEV", "loader", "meta", "useLoaderData", "useState", "Link", "Outlet", "meta", "jsxDEV", "loader", "redirect", "loader", "redirect", "meta", "Fragment", "jsxDEV", "Link", "jsxDEV", "Link", "ErrorBoundry", "action", "loader", "meta", "json", "redirect", "Form", "Link", "jsxDEV", "loader", "redirect", "json", "action", "meta", "ErrorBoundry", "Form", "Link", "loader", "json", "Form", "Link", "Outlet", "useLoaderData", "arc", "createId", "skToId", "arc", "skToId", "jsxDEV", "loader", "json", "useLoaderData", "Link", "Form", "Outlet", "jsxDEV", "meta", "Link", "Outlet", "Fragment", "jsxDEV", "ErrorBoundry", "action", "loader", "meta", "json", "redirect", "Form", "Link", "useActionData", "useSearchParams", "React", "jsxDEV", "loader", "redirect", "json", "action", "meta", "ErrorBoundry", "useSearchParams", "useActionData", "Form", "Link", "action", "action"]
}
